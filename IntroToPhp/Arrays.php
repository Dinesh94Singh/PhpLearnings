<?php

# hetrogenous collection, just like python, but stored as key-value pairs.
# keys generated by php

$arr = array(); // empty array
$arr2 = array("dinesh", "singh", 9, 1994); // array in php is a key-value pair, with key being created by php.

print_r($arr2);

# ---------------------- Associated array (Dictionary ??) --------------------
$arr3 = array(
    "first_name" => "Dinesh",
    "last_name" => "Singh",
    "age" => 27,
    1 => "94-Id",
    "Male", // this would be indexed zero, if no int key previously used, but since 1 is used in line 16, it would be 2
);

print_r($arr3);


# ------------------ Indexing arrays -------------------
echo $arr3["first_name"]."\n";
echo $arr3[2]."\n";

# ------------------ Check if Key exists or not ---------------------
echo array_key_exists("first_name", $arr3)."\n";
echo array_key_exists("middle_name", $arr3)." - Doesn't print anything\n";

# ----------------- Check if Value exists or not ---------------
echo in_array("Dinesh", $arr3)."\n";
echo in_array("Savya", $arr3)." - Doesn't print anything\n";
echo in_array("27", $arr3)." Doesn't type check\n";
echo in_array("27", $arr3, true)." Does type check\n";

# ---------------- Add to array ------------------
array_push($arr3, "Menlo Park");
$arr3[] = "California"; # preferred method. Adds only indexed values, next available integer value
$arr3['Country'] = "USA";

print_r($arr3);

# --------------------- Remove from Array ----------------------
echo array_pop($arr3); # similar to stack - pops the last item
unset($arr3[1], $arr3[2]); # removes the k-v with key as 1

// you can even unset the variable as well - unset($arr3)

print_r($arr3);

# -------------- Sorting the Array -----------------
asort($arr3); // preservs the keys, but values are sorted based of values
print_r($arr3);

ksort($arr3); // sort keys. Similar to TreeMap
print_r($arr3); 

sort($arr3); // in-place sort, but keys are modified, to be indexes
print_r($arr3);

# ----------------- Count ------------------
echo count($arr3)."\n"; // size of arr

$languages = [ // multi-dimensional arr (need not )
    "Male" => array(
        "Dinesh" => array("Php", "Python", "Java", "Java Script (React)"),
    ),
    "Female" => array(
        "Savya" => array("Java"),
    ),
];

echo count($languages)."\n";
echo count($languages, 1)."\n"; // recursive count
echo count($languages, COUNT_RECURSIVE)."\n"; // php constant, no need to import or anything

echo "Does Dinesh who is a male, know java ? ".in_array("Java", $languages["Male"]["Dinesh"])."\n";

# --------------- Iterating the array -----------
foreach($arr3 as $val) {
    echo $val."\n";
}

foreach($arr3 as $key => $val) {
    echo $key."=>".$val."\n";
}